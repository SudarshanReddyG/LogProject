<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
		
	<!-- <security:global-method-security  secured-annotations="enabled" /> -->
	
	<security:global-method-security  pre-post-annotations="enabled" />

	<!-- Default Login Page -->
	<!-- 	
	<security:http>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login/>
		<security:logout/>
	</security:http> -->
	
	<!-- Custom Login Page 1 -->
	
<!-- 	<security:http pattern="/login" security="none" />
	
	<security:http>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login login-page="/login"/>
	</security:http> -->
	
	<!-- Custom Login Page 2 -->
	
	<!-- <security:http>
		<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login login-page="/login"/>
	</security:http> -->
	
	<!-- Http basic authentication -->
	
	<!-- <security:http>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:http-basic/>
	</security:http> -->
	
	<!-- Default post login page -->
	
	<!-- <security:http>
		<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login login-page="/login" always-use-default-target="true" default-target-url="/home"/>
	</security:http> -->
	
	<!-- Default Logout page -->
	
	<!-- <security:http>
		<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login login-page="/login"  authentication-failure-url="/login" always-use-default-target="true" default-target-url="/home"/>
		<security:logout invalidate-session="true" logout-success-url="/login"/>
	</security:http> -->
	
	<!-- Default Logout page  having requires channel, and port mapping also-->
	
	<security:http disable-url-rewriting="true" create-session="always">
		<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="any"/>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN, ROLE_USER"/>
		<security:form-login login-page="/login"  authentication-failure-url="/login" always-use-default-target="true" default-target-url="/home"/>
		<security:logout invalidate-session="true" logout-success-url="/login" delete-cookies="JSESSIONID"/>
		<!-- <security:port-mappings>
			<security:port-mapping http="8445" https="8094"/>
		</security:port-mappings> -->
		<security:session-management invalid-session-url="/login/sessioninvalidated"  >
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/login/sessionexpired"/>
		</security:session-management>
	</security:http>
	
	<!-- Custom Logout page -->
	
<!-- 	<security:http>
		<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/logout" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<security:form-login login-page="/login" always-use-default-target="true" default-target-url="/home"/>
		<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login"/>
	</security:http> -->
	
	<!-- Inmemory authentication provider -->
	
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="sudarshan" password="sudarshan" authorities="ROLE_USER, ROLE_ADMIN"/>
				<security:user name="abc" password="abc" authorities="ROLE_USER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->
	
	<!-- Authentication using userdetailsservice -->
	
	<!-- <security:authentication-manager>
		<security:authentication-provider user-service-ref="myAppUserDtlsSrvc"/>
	</security:authentication-manager> -->
	
	<!-- Authentication using authentication provider -->
	
	<!-- <security:authentication-manager>
		<security:authentication-provider ref="authenticationProviderObj"/>
	</security:authentication-manager> -->
	
	<!-- Authentication using jdbc user service and datasource -->
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dbDataSource" authorities-by-username-query="select USERNAME, ROLE from MYAPP_USERS_ROLES where USERNAME = ?" 
			users-by-username-query="select USERNAME, PASSWORD, CASE ENABLED WHEN 'Y' THEN '1' ELSE '0' END from MYAPP_USERS where USERNAME = ?"/>
		</security:authentication-provider>
	</security:authentication-manager> -->	
	
	<!-- Authentication using JdbcDaoImpl class -->
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="jdbcDaoImplObj"/>
	</security:authentication-manager>
	
	
	<!-- Authentication using JdbcDaoImpl class and password encoder-->
	
	<!-- <security:authentication-manager>
		<security:authentication-provider user-service-ref="jdbcDaoImplObj">
			<security:password-encoder ref="bcryptEncoder" />
		</security:authentication-provider>
	</security:authentication-manager> -->
	
</beans>
